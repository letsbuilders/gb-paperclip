name: Pull Request check
on:
  - pull_request
  - workflow_dispatch
env:
  RACK_ENV: test
  BUNDLER_VERSION: 2.2.30
  ImageOS: ubuntu20
jobs:
  test:
    name: Run test
    runs-on: ubuntu-latest
    env:
      SIMPLECOV: json
      ImageOS: ubuntu20
    container: ruby:2.7-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          apk add --no-cache --update build-base \
              linux-headers \
              bash openssh-client git tar \
              postgresql-dev \
              nodejs \
              tzdata libcurl curl-dev libxml2 libxml2-dev gcc make \
              sqlite sqlite-dev sqlite-libs \
              imagemagick \
              ffmpeg x264 x265 libvpx libtheora \
              file
          gem install bundler:${BUNDLER_VERSION}
      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-test-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-test-
      - name: Install gems
        run: |
          bundle config path vendor/bundle
          bundle config set with 'development test'
          bundle config set --local deployment 'true'
          bundle install --jobs 16 --retry 3
      - name: Runs tests
        run: |
          bundle exec rspec -f j -o rspec_results.json -f p
      - name: RSpec Report
        if: always()
        uses: SonicGarden/rspec-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          json-path: rspec_results.json
      - name: Simplecov Report
        uses: aki77/simplecov-report-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          failedThreshold: 70
  lint:
    name: Run lint checks
    if: ${{ github.event_name  == 'pull_request' }}
    runs-on: ubuntu-latest
    env:
      ImageOS: ubuntu20
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get install libcurl4 lua-curl-dev libxml2 libxml2-dev build-essential
      - name: Setup ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7'
      - name: Cache gems
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-danger-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-danger-
      - name: Run danger
        uses: MeilCli/danger-action@v5
        with:
          plugins_file: 'Gemfile'
          install_path: 'vendor/bundle'
          danger_file: 'Dangerfile'
          danger_id: 'danger-pr'
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}